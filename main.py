# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UXe7tvF46HJuQQurzYSMVfTKKsHlmj1I
"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
import numpy as np

X = np.array([[0, 0],
              [0, 1],
              [1, 0],
              [1, 1]])

y = np.array([[0],
              [1],
              [1],
              [0]])

model = Sequential()
model.add(Dense(8, input_dim=2, activation='tanh'))
model.add(Dense(4, activation='tanh'))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

model.fit(X, y, epochs=2000, verbose=0)

loss, accuracy = model.evaluate(X, y, verbose=0)
print(f"\nFinal Loss: {loss:.4f}, Final Accuracy: {accuracy:.4f}")

predictions = model.predict(X)

print("\nXOR Predictions:")
for i in range(len(X)):
    prob = predictions[i][0]
    predicted = int(prob >= 0.5)
    actual = y[i][0]
    print(f"Input: {X[i]} => Predicted: {predicted}, Actual: {actual}, Prob: {prob:.4f}")